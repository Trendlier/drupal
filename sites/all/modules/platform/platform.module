<?php

module_load_include('php', 'platform', 'dao_category');
module_load_include('php', 'platform', 'dao_product');
module_load_include('php', 'platform', 'dao_news_post');
module_load_include('php', 'platform', 'node_fun');

/**
 * Trendlier platform hooks for Drupal
 */

/**
 * Implements hook_menu
 */
function platform_menu()
{
    return array(
        'platform/add_category_form' => array(
            'title' => 'Add Category',
            'page callback' => 'drupal_get_form',
            'page arguments' => array('platform_add_category_form'),
            'access callback' => TRUE,
            'type' => MENU_NORMAL_ITEM,
        ),
    );
}

function platform_add_category_form($form, &$form_state)
{
    return array(
        'add' => array(
            '#type' => 'fieldset',
            '#title' => t('Add a category to Trendlier app'),
            'name' => array(
                '#type' => 'textfield',
                '#title' => t('Name'),
                '#required' => TRUE,
                '#default_value' => '',
                '#description' => 'Name of category',
                '#size' => 20,
                '#maxlength' => 20,
            ),
            'submit' => array(
                '#type' => 'submit',
                '#value' => 'Add',
            ),
        ),
    );
}

/**
 * Called when platform/add_category_form gets submitted
 */
function platform_add_category_form_submit($form, &$form_state)
{
    try
    {
        $id = platform_db_category_add($form_state['values']);
        drupal_set_message(
            'Added ' . $form_state['values']['name'] . ' ' .
            '(ID ' . $id . ')');
    }
    catch (Exception $e)
    {
        drupal_set_message($e->getMessage(), 'error');
    }
}

/**
 * Implements hook_node_insert
 */
function platform_node_insert($node)
{
    try
    {
        switch($node->type)
        {
            case 'product':
                $product = platform_node_product_get($node);
                platform_db_product_add($product);
                break;
            case 'news_post':
                $news_post = platform_node_news_post_get($node);
                platform_db_news_post_add($news_post);
            default:
                break;
        }
    }
    catch (Exception $e)
    {
        drupal_set_message($e->getMessage(), 'error');
    }
}

/**
 * Implements hook_node_update
 */
function platform_node_update($node)
{
    try
    {
        switch($node->type)
        {
            case 'product':
                $product = platform_node_product_get($node);
                platform_db_product_edit($product);
                break;
            case 'news_post':
                $news_post = platform_node_news_post_get($node);
                platform_db_news_post_edit($news_post);
                break;
            default:
                break;
        }
    }
    catch (Exception $e)
    {
        drupal_set_message($e->getMessage(), 'error');
    }
}

/**
 * Implements hook_node_delete
 */
function platform_node_delete($node)
{
    try
    {
        switch($node->type)
        {
            case 'product':
                platform_db_product_remove($node);
                break;
            case 'news_post':
                platform_db_news_post_remove($node);
                break;
            default:
                break;
        }
    }
    catch (Exception $e)
    {
        drupal_set_message($e->getMessage(), 'error');
    }
}
